{"version":3,"sources":["Filters/CheckboxFilter.js","FilterContainer.js","Plots/TimelineDotChart.js","Util.js","Plots/AstroCountChart.js","Plots/SpacecraftCountChart.js","Plots/NumSpacewalks.js","Plots/NumAstro.js","Plots/NumHours.js","Plots/NumVehicles.js","PlotsContainer.js","App.js","index.js"],"names":["CheckboxFilter","stateObj","intermediateStateFunc","spacecraftOrAstro","className","Object","keys","map","key","labelName","onChange","newState","deselect","checked","handleInputCheck","type","id","htmlFor","FilterContainer","originalMissionData","setFilterMissionData","cosOrAstFilterSetupObj","forEach","cosOrAst","useState","cosmoOrAstro","setCosmoOrAstro","spacecraftSetupObj","spacecraft","spacecraftFilter","setSpacecraftFilters","uniqueAstroVehicleCombos","reduce","accumulator","mission","comboToCheck","filter","u","length","push","updateFilterState","newTempState","uniqueCombosRemaining","remainingSpacecraft","Set","item","remainingAstOrCos","newCountryState","astroOrCosmo","checkedVal","includes","newSpacecraftState","useEffect","newFilteredData","m","TimelineDotChart","filterMissionData","xAxisRef","useRef","yAxisRef","TimelineDotData","year","yearCounter","i","yearRank","useResizeDetector","widthRs","width","ref","margin","xScale","d3","domain","minYear","range","xAxis","scale","tickFormat","yScale","yAxis","current","call","on","event","tt1X","pageX","tt1Y","pageY","style","html","srcElement","attributes","message","nodeValue","classed","viewBox","undefined","d","cx","cy","r","fill","country","vehicle","crewArr","name","join","duration","purpose","transform","spreadToRowPerAstro","missionData","rowPerAstroData","CrewMemberId","AstroName","crewMembersToFind","astroName","crewMemberId","calcCountPerAstro","astroObs","numMissions","totalMinsInSpace","timeInMinutes","yearsActiveMin","Math","min","yearsActiveMax","max","astroCountry","AstroCountChart","ReducedAstroData","sortedAstroCount","values","sort","a","b","slice","height","ticks","paddingInner","paddingOuter","x","y","bandwidth","round","SpacecraftCountChart","SpacecraftCounts","spacecraftCount","spacewalkYearsMin","spacewalkYearsMax","spacewalkMinutes","NumSpacewalks","numberOfSpacewalks","NumAstro","rowPerAstro","astroCounts","numberOfAstros","NumHours","astroCountsArr","minutesInSpace","parseInt","NumVehicles","vehicles","numberOfVehicles","PlotsContainer","App","setOriginalMissionData","dateLUT","axios","get","then","response","data","missionMinutes","split","crew","missionDate","date","missionYear","Date","parse","getFullYear","replaceAll","crewWithoutSpaces","replace","trim","catch","error","console","log","href","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.43ba74d8.chunk.js","sourcesContent":["import './CheckboxFilter.css'\r\nconst CheckboxFilter = ({stateObj, intermediateStateFunc, spacecraftOrAstro}) => {\r\n\r\n    function handleInputCheck (key) {\r\n        var newState = {...stateObj}\r\n        let deselect = true\r\n        if(stateObj[key].checked) {\r\n            newState[key].checked = false\r\n            intermediateStateFunc({...newState}, spacecraftOrAstro, deselect)\r\n        } else {\r\n            newState[key].checked = true\r\n            deselect = false\r\n            intermediateStateFunc({...newState}, spacecraftOrAstro, deselect)\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className=\"filterSubset\">\r\n            {Object.keys(stateObj)\r\n                .map((key) => {\r\n                    let labelName = key === 'ISS' ? \"Intl Space Station\" : \r\n                                        key === 'STS' ? \"Space Shuttle\" : key\r\n                    return(\r\n                        <div key={key}>\r\n                            <input onChange={()=> handleInputCheck(key)} type=\"checkbox\" id={key+\"Checkbox\"}\r\n                                checked={stateObj[key].checked}   />                    \r\n                            <label htmlFor={key+\"Checkbox\"} id={key+\"CheckboxLab\"} className={spacecraftOrAstro+\"CheckBox\"}>\r\n                                {labelName}\r\n                            </label>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default CheckboxFilter;","import { useEffect, useState} from 'react'\r\nimport CheckboxFilter from './Filters/CheckboxFilter.js'\r\n\r\nconst FilterContainer = ({originalMissionData, setFilterMissionData}) => {\r\n\r\n    // declaring state objects for \r\n    const cosOrAstArr = [\"Cosmonaut\", \"Astronaut\"]\r\n    let cosOrAstFilterSetupObj = {}\r\n    cosOrAstArr.forEach(cosOrAst => {\r\n        cosOrAstFilterSetupObj[cosOrAst] = {checked: true}\r\n    }) \r\n    const [cosmoOrAstro, setCosmoOrAstro] = useState(cosOrAstFilterSetupObj)\r\n\r\n    const spacecraftArr = ['Apollo', 'Gemini', 'ISS', 'STS', 'Skylab',\r\n                            'Soyuz', 'Voskhod']\r\n    let spacecraftSetupObj = {}\r\n    spacecraftArr.forEach(spacecraft => {\r\n        spacecraftSetupObj[spacecraft] = {checked: true}\r\n    }) \r\n    const [spacecraftFilter, setSpacecraftFilters] = useState(spacecraftSetupObj)\r\n\r\n\r\n    const uniqueAstroVehicleCombos = originalMissionData\r\n        .reduce((accumulator,mission) => {\r\n            let comboToCheck = {cosmoOrAstro: mission.cosmoOrAstro, spacecraft: mission.spacecraft}\r\n            if(accumulator.filter(u => \r\n                u.cosmoOrAstro === comboToCheck.cosmoOrAstro &&\r\n                u.spacecraft === comboToCheck.spacecraft\r\n            ).length === 0) {\r\n                accumulator.push(comboToCheck)                \r\n            } \r\n            return(accumulator)\r\n        },[])\r\n\r\n    const updateFilterState = function (newTempState, spacecraftOrAstro, deselect) {\r\n        \r\n        let uniqueCombosRemaining         \r\n        if(spacecraftOrAstro === \"cosmoOrAstro\" && deselect) {\r\n            uniqueCombosRemaining = uniqueAstroVehicleCombos\r\n            .filter(u => newTempState[u.cosmoOrAstro].checked &&\r\n                     spacecraftFilter[u.spacecraft].checked)\r\n        } else if (spacecraftOrAstro === \"cosmoOrAstro\" && !deselect) {\r\n            uniqueCombosRemaining = uniqueAstroVehicleCombos\r\n            .filter(u => newTempState[u.cosmoOrAstro].checked ||\r\n                     spacecraftFilter[u.spacecraft].checked)\r\n        } else if (spacecraftOrAstro === \"spacecraft\" && deselect) {\r\n            uniqueCombosRemaining = uniqueAstroVehicleCombos\r\n            .filter(u => cosmoOrAstro[u.cosmoOrAstro].checked &&\r\n                        newTempState[u.spacecraft].checked)\r\n        } else if (spacecraftOrAstro === \"spacecraft\" && !deselect) {\r\n            // Only reference the spacecraft filter when selecting\r\n            uniqueCombosRemaining = uniqueAstroVehicleCombos\r\n            .filter(u => newTempState[u.spacecraft].checked)\r\n        }\r\n        \r\n        let remainingSpacecraft =  [...new Set(uniqueCombosRemaining.map(item => item.spacecraft))];\r\n        let remainingAstOrCos = [...new Set(uniqueCombosRemaining.map(item => item.cosmoOrAstro))];\r\n        \r\n        let newCountryState = {}  \r\n        Object.keys(cosmoOrAstro)\r\n            .forEach((astroOrCosmo) => {\r\n                let checkedVal = remainingAstOrCos.includes(astroOrCosmo)\r\n                newCountryState[astroOrCosmo] = {checked: checkedVal }\r\n            })\r\n        setCosmoOrAstro(newCountryState)\r\n\r\n        let newSpacecraftState = {}  \r\n        Object.keys(spacecraftFilter)\r\n            .forEach((spacecraft) => {\r\n                let checkedVal = remainingSpacecraft.includes(spacecraft)\r\n                newSpacecraftState[spacecraft] = {checked: checkedVal }\r\n            })\r\n        setSpacecraftFilters(newSpacecraftState)\r\n    }\r\n\r\n    useEffect(()=>{\r\n\r\n        let newFilteredData = originalMissionData\r\n            .filter(m => cosmoOrAstro[m.cosmoOrAstro].checked  &&\r\n                        spacecraftFilter[m.spacecraft].checked\r\n            )\r\n        setFilterMissionData(newFilteredData)\r\n\r\n    },[cosmoOrAstro, spacecraftFilter, originalMissionData, setFilterMissionData])\r\n\r\n    return(\r\n        <div className=\"filterContainer\">\r\n            <br />\r\n            <CheckboxFilter stateObj ={cosmoOrAstro} intermediateStateFunc={updateFilterState} \r\n                            spacecraftOrAstro=\"cosmoOrAstro\"  />\r\n            <br />\r\n            <CheckboxFilter stateObj ={spacecraftFilter} intermediateStateFunc={updateFilterState}\r\n                            spacecraftOrAstro=\"spacecraft\"  />\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default FilterContainer    ","import * as d3 from 'd3'\r\nimport './TimelineDotChart.css'\r\nimport { useResizeDetector } from 'react-resize-detector'\r\nimport { useEffect, useRef } from 'react'\r\n\r\nconst TimelineDotChart = ({filterMissionData}) => {\r\n\r\n    const xAxisRef = useRef(null)\r\n    const yAxisRef = useRef(null)\r\n\r\n    let TimelineDotData = filterMissionData\r\n    let year = 0; // a year before the dataset\r\n    let yearCounter = 1;\r\n    for(let i=0;i<TimelineDotData.length;i++){\r\n        if(TimelineDotData[i].year !== year){\r\n            year = TimelineDotData[i].year\r\n            yearCounter = 1\r\n        } else {\r\n            yearCounter += 1\r\n        }\r\n    TimelineDotData[i].yearRank = yearCounter\r\n    }\r\n\r\n    const {width: widthRs, ref} = useResizeDetector();\r\n\r\n    const height = 275 \r\n    const margin = {top: 30, right:40, bottom: 30, left: 30}\r\n    const maxNumInYear = 25  // fixing these for domain instead of re-scaling after each filter\r\n    const minYear = 1965\r\n    const maxYear = 2013\r\n    const xScale = d3\r\n        .scaleLinear()\r\n        .domain([minYear-1, maxYear])\r\n        .range([margin.left, widthRs-margin.right])\r\n\r\n    const xAxis = d3.axisBottom().scale(xScale).tickFormat(d3.format(\"d\"));\r\n    \r\n    const yScale = d3\r\n        .scaleLinear()\r\n        .domain([0,maxNumInYear])\r\n        .range([height-margin.bottom, margin.top])\r\n\r\n    const yAxis = d3.axisLeft().scale(yScale)\r\n\r\n    useEffect(() => {\r\n        d3.select(xAxisRef.current).call(xAxis) \r\n        d3.select(yAxisRef.current).call(yAxis)\r\n    },[xAxis,yAxis])\r\n\r\n    useEffect(() =>{\r\n         d3.selectAll('circle')\r\n            .on('mouseover', function(event) {\r\n                var tt1X = event.pageX - 100\r\n                var tt1Y = event.pageY - 120\r\n                d3.select(\"#TimelineDotChartMouseover\")\r\n                  .style(\"left\", tt1X + \"px\")\r\n                  .style(\"top\", tt1Y + \"px\")\r\n                  .html(event.srcElement.attributes.message.nodeValue)\r\n                  .classed(\"hidden\", false)\r\n            })\r\n            .on(\"mouseout\", function() {\r\n                d3.select(\"#TimelineDotChartMouseover\").classed(\"hidden\", true)\r\n            })\r\n    })\r\n\r\n\r\n\r\n    return(\r\n        <div className=\"TimelineDotChart\" ref={ref}>\r\n            <div id=\"TimelineDotChartMouseover\" className=\"hidden\"></div>\r\n            <svg viewBox={`0 0 ${widthRs===undefined ? 0 : widthRs} ${height}`}>\r\n\r\n                <g >\r\n                    {TimelineDotData.map((d,i) => {\r\n                        return(\r\n                            <circle key={i}\r\n                                cx={xScale(d.year)}\r\n                                cy={yScale(d.yearRank)}\r\n                                r={(xScale(1966)-xScale(1965))/3}\r\n                                fill={d.country==='USA' ? 'rgba(37, 37, 216, .5)' : 'rgba(216, 37, 37, .5)'}\r\n                                message={`<center><b>${d.year}</b></center><br/>\r\n                                          <b>${d.country} Mission</b>: ${d.vehicle}<br />\r\n                                          <b>Personnel</b>: ${d.crewArr.map((name,i) => (i%2===0 || i===d.crewArr.length-1 ? name + \" \" : name+\", \")).join('')}<br />\r\n                                          <b>Duration</b>: ${d.duration}<br />\r\n                                          ${d.purpose === undefined ? '' : '<b>Description</b>:  '+ d.purpose}`}\r\n\r\n\r\n                            />\r\n                        )\r\n                    })}\r\n                </g>\r\n                <g>\r\n                    <g ref={xAxisRef} transform={`translate(0 ${height-margin.bottom})`}/>\r\n                    <g ref={yAxisRef} transform={`translate(${margin.left} 0)`}/>\r\n                    <g>\r\n                        <text transform={`translate(${margin.left+2} ${margin.top}) rotate(90)`}\r\n                         className=\"yAxisLabel\"># of Missions</text>\r\n                    </g>\r\n                </g>\r\n            </svg>            \r\n        </div>\r\n    )\r\n    \r\n}\r\nexport default TimelineDotChart\r\n","const spreadToRowPerAstro = function(missionData){\r\n    let rowPerAstroData = []\r\n    missionData.forEach(mission => {\r\n        var AstroName = \"\";\r\n        var CrewMemberId\r\n        var crewMembersToFind = mission.crewArr.length/2\r\n        for(let i=0; i<crewMembersToFind;i++){\r\n          AstroName = mission.crewArr[i*2] + \" \" + mission.crewArr[i*2+1];\r\n          CrewMemberId = i;\r\n          rowPerAstroData.push({\r\n            ...mission, \r\n            astroName: AstroName,\r\n            crewMemberId: CrewMemberId\r\n          })  \r\n        }\r\n    })\r\n    return(rowPerAstroData)\r\n}\r\n\r\nconst calcCountPerAstro = function(rowPerAstroData){\r\n    let returnObject = rowPerAstroData\r\n        .reduce((accumulator, astroObs)=>{\r\n            if(!accumulator[astroObs.astroName]){\r\n            accumulator[astroObs.astroName] = {\r\n                astroName: astroObs.astroName,\r\n                astroCountry: astroObs.country,\r\n                numMissions: 1,\r\n                totalMinsInSpace: astroObs.timeInMinutes, \r\n                yearsActiveMin: astroObs.year,\r\n                yearsActiveMax: astroObs.year\r\n            }\r\n            } else {\r\n            accumulator[astroObs.astroName].numMissions += 1\r\n            accumulator[astroObs.astroName].totalMinsInSpace += astroObs.timeInMinutes\r\n            accumulator[astroObs.astroName].yearsActiveMin = \r\n                Math.min(accumulator[astroObs.astroName].yearsActiveMin,\r\n                astroObs.year)\r\n            accumulator[astroObs.astroName].yearsActiveMax = \r\n            Math.max(accumulator[astroObs.astroName].yearsActiveMax,\r\n                astroObs.year)\r\n            }\r\n            return(accumulator)\r\n        },{})\r\n    return(returnObject)\r\n}\r\n\r\nconst getSpacecraftCounts = function(missionData) {\r\n    let returnObject = missionData\r\n    .reduce((accumulator, mission) => {\r\n        if(!accumulator[mission.spacecraft]){\r\n            accumulator[mission.spacecraft] = {\r\n                spacecraft: mission.spacecraft === \"STS\" ? \"Space Shuttle\" : \r\n                    mission.spacecraft === \"ISS\" ? \"Intl Space Station\" : mission.spacecraft,\r\n                spacecraftCount: 1,\r\n                spacewalkYearsMin: mission.year,\r\n                spacewalkYearsMax: mission.year, \r\n                country: mission.country,\r\n                spacewalkMinutes: mission.timeInMinutes\r\n            }\r\n        } else {\r\n            accumulator[mission.spacecraft].spacecraftCount += 1\r\n            accumulator[mission.spacecraft].spacewalkYearsMin = mission.year < accumulator[mission.spacecraft].spacewalkYearsMin ? \r\n                mission.year : accumulator[mission.spacecraft].spacewalkYearsMin\r\n            accumulator[mission.spacecraft].spacewalkYearsMax = mission.year > accumulator[mission.spacecraft].spacewalkYearsMax ? \r\n                mission.year : accumulator[mission.spacecraft].spacewalkYearsMax \r\n            accumulator[mission.spacecraft].country = mission.country === accumulator[mission.spacecraft].country ? \r\n                accumulator[mission.spacecraft].country : \"USA and Russia\"\r\n            accumulator[mission.spacecraft].spacewalkMinutes += mission.timeInMinutes\r\n        }\r\n    return(accumulator)\r\n    },{})\r\n    return(returnObject)\r\n}\r\n\r\n\r\nexport {calcCountPerAstro, spreadToRowPerAstro, getSpacecraftCounts}","import * as d3 from 'd3'\r\nimport { useResizeDetector } from 'react-resize-detector'\r\nimport { useEffect, useRef } from 'react'\r\nimport {spreadToRowPerAstro, calcCountPerAstro} from '../Util'\r\nimport './SummaryChart.css'\r\n\r\nconst AstroCountChart = ({filterMissionData}) => {\r\n\r\n    const xAxisRef = useRef(null)\r\n    const yAxisRef = useRef(null)\r\n\r\n    let TimelineDotData = filterMissionData\r\n\r\n    var rowPerAstroData = spreadToRowPerAstro(TimelineDotData)\r\n    var ReducedAstroData = calcCountPerAstro(rowPerAstroData)\r\n\r\n    const AstroCount = Object.values(ReducedAstroData)\r\n    const sortedAstroCount = AstroCount\r\n        .sort((a,b) => (b.numMissions -a.numMissions))\r\n        .slice(0,10)\r\n\r\n    const {width: widthRs, ref} = useResizeDetector();\r\n\r\n    const height = 200\r\n    const margin = {top: 25, right:20, bottom: 30, left: 100}\r\n\r\n    const xScale = d3\r\n        .scaleLinear()\r\n        .domain([0, d3.max(sortedAstroCount.map(d=>d.numMissions))])\r\n        .range([0, widthRs-margin.right-margin.left])\r\n    \r\n    const xAxis = d3.axisBottom()\r\n        .scale(xScale)\r\n        .tickFormat(d3.format(\"1\"))\r\n        .ticks(3);\r\n\r\n    const yScale = d3\r\n        .scaleBand()\r\n        .domain(sortedAstroCount.map(d => d.astroName))\r\n        .range([margin.top, height-margin.bottom])\r\n        .paddingInner(0.1)\r\n        .paddingOuter(0.5)\r\n    const yAxis = d3.axisLeft().scale(yScale)\r\n\r\n    useEffect(() => {\r\n        d3.select(xAxisRef.current).call(xAxis) \r\n        d3.select(yAxisRef.current).call(yAxis)\r\n    },[xAxis,yAxis])\r\n\r\n    useEffect(() =>{\r\n         d3.selectAll('rect')\r\n            .on('mouseover', function(event) {\r\n                var tt1X = event.pageX - 90\r\n                var tt1Y = event.pageY - 100\r\n                d3.select(\"#AstroCountChartMouseover\")\r\n                  .style(\"left\", tt1X + \"px\")\r\n                  .style(\"top\", tt1Y + \"px\")\r\n                  .html(event.srcElement.attributes.message.nodeValue)\r\n                  .classed(\"hidden\", false)\r\n            })\r\n            .on(\"mouseout\", function() {\r\n                d3.select(\"#AstroCountChartMouseover\").classed(\"hidden\", true)\r\n            })\r\n    })\r\n\r\n    return(\r\n        <div className=\"AstroCountChart\" ref={ref}>\r\n            <div id=\"AstroCountChartMouseover\" className=\"hidden\"></div>\r\n            <svg viewBox={`0 0 ${widthRs} ${height}`}>\r\n\r\n                <g >\r\n                    {sortedAstroCount.map((d,i) => {\r\n                        return(\r\n                            <rect key={i}\r\n                                x={margin.left}\r\n                                y={yScale(d.astroName)}\r\n                                height={yScale.bandwidth()}\r\n                                width={xScale(d.numMissions)}\r\n                                fill= {d.astroCountry==='USA' ? 'rgba(37, 37, 216, .5)' : 'rgba(216, 37, 37, .5)'}\r\n                                message={`<center><b>${d.astroName}</b><br/><br/>\r\n                                          <b># of Spacewalks</b>: ${d.numMissions}<br />\r\n                                          <b>Hours in Space</b>: ${Math.round(d.totalMinsInSpace/60)}<br />\r\n                                          <b>Years</b>: ${d.yearsActiveMax===d.yearsActiveMin ? d.yearsActiveMin : `${d.yearsActiveMin}-${d.yearsActiveMax}`}\r\n                                          </center>`}\r\n\r\n\r\n                            />\r\n                        )\r\n                    })}\r\n                </g>\r\n                <g>\r\n                    <g ref={xAxisRef} transform={`translate(${margin.left} ${height-margin.bottom})`}/>\r\n                    <g ref={yAxisRef} transform={`translate(${margin.left} 0)`}/>\r\n                    <g>\r\n                        <text transform={`translate(${widthRs-widthRs*.5} ${height}) `}\r\n                         className=\"yAxisLabel\"># of Missions</text>\r\n                    </g>\r\n                    <g>\r\n                        <text transform={`translate(${widthRs-widthRs*.72} ${margin.top-8}) `}\r\n                         className=\"title\">Individual Spacewalk Count</text>\r\n                    </g>\r\n                </g>\r\n            </svg>            \r\n        </div>\r\n    )\r\n    \r\n}\r\nexport default AstroCountChart\r\n","import * as d3 from 'd3'\r\nimport { useResizeDetector } from 'react-resize-detector'\r\nimport { useEffect, useRef } from 'react'\r\nimport {getSpacecraftCounts} from '../Util'\r\nimport './SummaryChart.css'\r\n\r\nconst SpacecraftCountChart = ({filterMissionData}) => {\r\n\r\n    const xAxisRef = useRef(null)\r\n    const yAxisRef = useRef(null)\r\n\r\n    let SpacecraftCounts = getSpacecraftCounts(filterMissionData)\r\n\r\n    SpacecraftCounts = Object.values(SpacecraftCounts)\r\n\r\n    SpacecraftCounts = SpacecraftCounts\r\n        .sort((a,b) => (b.spacecraftCount -a.spacecraftCount))\r\n\r\n    const {width: widthRs, ref} = useResizeDetector();\r\n\r\n    const height = 200\r\n    const margin = {top: 25, right:20, bottom: 30, left: 100}\r\n\r\n    const xScale = d3\r\n        .scaleLinear()\r\n        .domain([0, d3.max(SpacecraftCounts.map(d=>d.spacecraftCount))])\r\n        .range([0, widthRs-margin.right-margin.left])\r\n    \r\n    const xAxis = d3.axisBottom()\r\n        .scale(xScale)\r\n        .tickFormat(d3.format(\"1\"))\r\n        .ticks(3);\r\n\r\n    const yScale = d3\r\n        .scaleBand()\r\n        .domain(SpacecraftCounts.map(d => d.spacecraft))\r\n        .range([margin.top, height-margin.bottom])\r\n        .paddingInner(0.1)\r\n        .paddingOuter(0.5)\r\n    const yAxis = d3.axisLeft().scale(yScale)\r\n\r\n    useEffect(() => {\r\n        d3.select(xAxisRef.current).call(xAxis) \r\n        d3.select(yAxisRef.current).call(yAxis)\r\n    },[xAxis,yAxis])\r\n\r\n    useEffect(() =>{\r\n    \r\n         d3.selectAll('rect')\r\n            .on('mouseover', function(event) {\r\n                var tt1X = event.pageX - 90\r\n                var tt1Y = event.pageY - 100\r\n                d3.select(\"#SpacecraftCountChartMouseover\")\r\n                  .style(\"left\", tt1X + \"px\")\r\n                  .style(\"top\", tt1Y + \"px\")\r\n                  .html(event.srcElement.attributes.message.nodeValue)\r\n                  .classed(\"hidden\", false)\r\n            })\r\n            .on(\"mouseout\", function() {\r\n                d3.select(\"#SpacecraftCountChartMouseover\").classed(\"hidden\", true)\r\n            })\r\n    })\r\n\r\n    return(\r\n        <div className=\"SpacecraftCountChart\" ref={ref}>\r\n            <div id=\"SpacecraftCountChartMouseover\" className=\"hidden\"></div>\r\n            <svg viewBox={`0 0 ${widthRs} ${height}`}>\r\n\r\n                <g >\r\n                    {SpacecraftCounts.map((d,i) => {\r\n                        return(\r\n                            <rect key={i}\r\n                                x={margin.left}\r\n                                y={yScale(d.spacecraft)}\r\n                                height={yScale.bandwidth()}\r\n                                width={xScale(d.spacecraftCount)}\r\n                                fill= {d.country==='USA' ? 'rgba(37, 37, 216, .5)' : \r\n                                        d.country==='Russia' ? 'rgba(216, 37, 37, .5)' : 'rgba(114, 28, 114, 0.3)'}\r\n                                message={`<center><b>${d.spacecraft}</b><br/><br/>\r\n                                          <b># of Spacewalks</b>: ${d.spacecraftCount}<br />\r\n                                          <b>Spacewalk Years</b>: ${d.spacewalkYearsMax===d.spacewalkYearsMin ? d.spacewalkYearsMin : `${d.spacewalkYearsMin}-${d.spacewalkYearsMax}`}\r\n                                          </center>`}\r\n\r\n\r\n                            />\r\n                        )\r\n                    })}\r\n                </g>\r\n                <g>\r\n                    <g ref={xAxisRef} transform={`translate(${margin.left} ${height-margin.bottom})`}/>\r\n                    <g ref={yAxisRef} transform={`translate(${margin.left} 0)`}/>\r\n                    <g>\r\n                        <text transform={`translate(${widthRs-widthRs*.5} ${height}) `}\r\n                         className=\"yAxisLabel\"># of Missions</text>\r\n                    </g>\r\n                    <g>\r\n                        <text transform={`translate(${widthRs-widthRs*.7} ${margin.top-8}) `}\r\n                         className=\"title\">Spacecraft Spacewalk Count</text>\r\n                    </g>\r\n                </g>\r\n            </svg>            \r\n        </div>\r\n    )\r\n    \r\n}\r\nexport default SpacecraftCountChart\r\n","import \"./Count.css\"\r\n\r\nconst NumSpacewalks = ({filterMissionData}) => {\r\n    let numberOfSpacewalks = filterMissionData.length\r\n    return(\r\n        <div className=\"CountContainer\">\r\n            <div className=\"CountVal\">{numberOfSpacewalks}</div>\r\n            <div className=\"CountLabel\"># of Spacewalks</div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default NumSpacewalks","import \"./Count.css\"\r\nimport {calcCountPerAstro, spreadToRowPerAstro} from '../Util'\r\n\r\nconst NumAstro = ({filterMissionData}) => {\r\n\r\n    let rowPerAstro = spreadToRowPerAstro(filterMissionData)\r\n    let astroCounts = calcCountPerAstro(rowPerAstro)\r\n\r\n    let numberOfAstros = Object.keys(astroCounts).length\r\n    return(\r\n        <div className=\"CountContainer\">\r\n            <div className=\"CountVal\">{numberOfAstros}</div>\r\n            <div className=\"CountLabel\"># of Astronaunts / Cosmonaunts</div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default NumAstro","import \"./Count.css\"\r\nimport {calcCountPerAstro, spreadToRowPerAstro} from '../Util'\r\n\r\nconst NumHours = ({filterMissionData}) => {\r\n\r\n    let rowPerAstro = spreadToRowPerAstro(filterMissionData)\r\n    let astroCounts = calcCountPerAstro(rowPerAstro)\r\n\r\n    let astroCountsArr = Object.values(astroCounts)\r\n\r\n    let minutesInSpace = 0\r\n    astroCountsArr\r\n        .forEach(m => {\r\n            minutesInSpace += parseInt(m.totalMinsInSpace)\r\n        })\r\n    return(\r\n        <div className=\"CountContainer\">\r\n            <div className=\"CountVal\">{Math.round(minutesInSpace/60)}</div>\r\n            <div className=\"CountLabel\">Hours in Space</div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default NumHours","import \"./Count.css\"\r\n\r\nconst NumVehicles = ({filterMissionData}) => {\r\n\r\n    let vehicles = filterMissionData\r\n        .reduce((accumulator, mission)=> {\r\n            if(!accumulator[mission.spacecraft]){\r\n                accumulator[mission.spacecraft] = 1\r\n            }\r\n            return(accumulator)\r\n        },{})\r\n\r\n    let numberOfVehicles = Object.keys(vehicles).length\r\n    return(\r\n        <div className=\"CountContainer\">\r\n            <div className=\"CountVal\">{numberOfVehicles}</div>\r\n            <div className=\"CountLabel\">Spacecraft Count</div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default NumVehicles","\r\nimport TimelineDotChart from './Plots/TimelineDotChart'\r\nimport AstroCountChart from './Plots/AstroCountChart'\r\nimport SpacecraftCountChart from './Plots/SpacecraftCountChart'\r\nimport NumSpacewalks from './Plots/NumSpacewalks'\r\nimport NumAstro from './Plots/NumAstro'\r\nimport NumHours from './Plots/NumHours'\r\nimport NumVehicles from './Plots/NumVehicles'\r\nimport './PlotsContainer.css'\r\n\r\nconst PlotsContainer = ({filterMissionData}) => {\r\n    return (\r\n        <div className=\"PlotsContainer\">\r\n            <div className=\"CountRow\">\r\n                <NumSpacewalks filterMissionData={filterMissionData} />\r\n                <NumAstro filterMissionData={filterMissionData} />\r\n                <NumHours filterMissionData={filterMissionData} />\r\n                <NumVehicles filterMissionData={filterMissionData} />\r\n            </div>\r\n            <div className=\"TimelineChartRow\">\r\n                <TimelineDotChart filterMissionData={filterMissionData}/>\r\n            </div>\r\n            <div className=\"SummaryChartRows\">\r\n                <div className=\"SummaryChart\">\r\n                    <AstroCountChart filterMissionData={filterMissionData}/>\r\n                </div>\r\n                <div className=\"SummaryChart\">\r\n                    <SpacecraftCountChart filterMissionData={filterMissionData} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlotsContainer","import './App.css'\nimport {useEffect, useState} from 'react'\nimport axios from 'axios'\nimport FilterContainer from './FilterContainer.js'\nimport PlotsContainer from './PlotsContainer.js'\n\nconst App = function (){\n  const [originalMissionData, setOriginalMissionData] = useState([])\n  const [filterMissionData, setFilterMissionData] = useState([])\n\n  useEffect(() => {\n\n    // Dates are excluded from the data source.  Launched dates were acquired for missing values\n    const dateLUT = {\n      \"Gemini VIII\": \"1966-03-16T00:00:00.000\",\n      \"STS-72\": \"1996-01-11T00:00:00.000\",\n      \"STS-76\": \"1996-03-22T00:00:00.000\",\n      \"STS-80\": \"1996-10-31T00:00:00.000\",\n      \"STS-82 /      HST-2\": \"1997-02-11T00:00:00.000\",\n      \"STS-86\": \"1997-09-26T00:00:00.000\",\n      \"Soyuz TM-4    Mir\": \"1987-12-21T00:00:00.000\",\n      \"STS-123/1JA\": \"2008-03-11T00:00:00.000\",\n      \"STS-130/20A\": \"2010-02-08T00:00:00.000\",\n      \"Voskhod 2\": \"1965-03-18T00:00:00.000\",\n      \"Soyuz 4&5\": \"1969-01-14T00:00:00.000\",\n      \"Soyuz 12\": \"1973-09-27T00:00:00.000\",\n      \"Soyuz 26    Salyut 6\": \"1977-12-10T00:00:00.000\",\n      \"Soyuz T-9       Salyut 7\": \"1983-06-27T00:00:00.000\",\n      \"Soyuz T-13      Salyut 7\": \"1985-06-06T00:00:00.000\",\n      \"Soyuz TM-7      Mir \": \"1988-11-26T00:00:00.000\",\n      \"Soyuz TM-8     Mir \": \"1989-09-05T00:00:00.000\",\n      \"Soyuz TM-13     Mir \": \"1991-10-02T00:00:00.000\",\n      \"Soyuz TM-15   Mir \": \"1992-07-27T00:00:00.000\",\n      \"Soyuz TM-17    Mir 16\": \"1993-07-01T00:00:00.000\",\n      \"Soyuz TM-18     Mir 17\": \"1994-01-08T00:00:00.000\",\n      \"Soyuz TM-X     Mir 20\": \"1995-09-03T00:00:00.000\",\n      \"Soyuz TM-23     Mir 21\": \"1996-02-21T00:00:00.000\",\n      \"Soyuz TM-24       Mir 22\": \"1996-08-17T00:00:00.000\",\n      \"ISS Incr-13\": \"2006-06-01T00:00:00.000\",\n      \"ISS Incr-18\": \"2008-10-12T00:00:00.000\"\n    }\n  \n    axios.get('https://data.nasa.gov/resource/eva.json')\n      .then(response => {\n        \n        setOriginalMissionData(\n          response.data.map(mission => {\n          let missionMinutes\n          if(mission.duration){\n            missionMinutes = parseInt(mission.duration.split(':')[0])*60 + parseInt(mission.duration.split(':')[1]) \n          } else {\n            missionMinutes = 0\n          }\n\n          if(mission.crew === \"Leroy Chiao          Winston Scott\"){\n            mission.vehicle = \"STS-72\"\n          }\n\n          let missionDate = mission.date\n          let missionYear = parseInt(new Date(Date.parse(missionDate)).getFullYear())\n          if(!missionYear){\n            missionDate = dateLUT[mission.vehicle]\n            missionYear = parseInt(new Date(Date.parse(missionDate)).getFullYear())\n          }\n\n          let purpose = mission.purpose ? mission.purpose.replaceAll(\"Â\",\"'\") : ''\n\n          let spacecraft = mission.vehicle.split(/[\\s-]+/)[0]\n          spacecraft = spacecraft === 'Incr' ? 'ISS' : spacecraft\n\n          let cosmoOrAstro = mission.country===\"USA\" ? 'Astronaut' : 'Cosmonaut'\n          \n          let crewWithoutSpaces = mission.crew.replace(/\\s+/g, ' ')\n\n          return {...mission,\n            crewWithoutSpaces: crewWithoutSpaces,\n            crewArr:  crewWithoutSpaces.trim().split(' '),\n            timeInMinutes: missionMinutes, \n            year: missionYear,\n            date: missionDate, \n            purpose: purpose,\n            spacecraft: spacecraft, \n            cosmoOrAstro: cosmoOrAstro\n          }\n        })\n       .sort((a, b) => (a.date > b.date) ? 1 : -1)\n      )\n\n      })\n      .catch(error => {\n        console.log(error)\n      })\n  }, [])\n\n  return(\n    <div className=\"App\">\n      <div className=\"HorizontalFlexTitle\">\n        <div className=\"Title\">\n          Spacewalks\n        </div>\n        <div className=\"TitleHR\">\n        </div>\n      </div>\n      <div className=\"HorizontalFlexContent\">\n        <div className=\"AppLeftSide\">\n          <div className=\"SubTitle\">\n            USA and Russia, 1965-2013\n          </div>\n          <div className=\"IntroText\">\n            Dataset provided by&nbsp;\n            <a href=\"https://data.nasa.gov/Raw-Data/Extra-vehicular-Activity-EVA-US-and-Russia/9kcy-zwvn\">\n              NASA's Open Data Portal</a>\n              &nbsp;showing all activities done by an astronaut or cosmonaut outside a spacecraft beyond the Earth's appreciable atmosphere.\n              <br/><br/><br/>\n              Filter the results with the controls below:   \n          </div>\n          <FilterContainer filterMissionData={filterMissionData} setFilterMissionData={setFilterMissionData} originalMissionData={originalMissionData} />\n        </div>\n        <div className=\"AppRightSide\">\n            <PlotsContainer filterMissionData={filterMissionData}/>\n        </div>\n      </div>\n    </div> \n  )\n}\n\nexport default App\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <div className=\"AppInIndex\">\n      <App />\n    </div>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}